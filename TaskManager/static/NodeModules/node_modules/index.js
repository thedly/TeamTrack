var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);
var redis = require('node-redis');
var webRTC = require('webrtc.io');
var sub = redis.createClient();
//Subscribe to the Redis chat channel
sub.subscribe('chat',function(){
	console.log("Connected to Redis")
	socket.emit('RedisMessage', "Connected to Redis");
});


var clients =[];

io.on('connection', function(socket){
  console.log('user connected... whatsup?');

   
   socket.emit('onconnectmsg', "Welcome user");
   sub.on('message', function(channel, message){
	var buffer = new Buffer(message, 'utf-8')
	var val = buffer.toString('utf-8')
	console.log(val)
	if (/^[\],:{}\s]*$/.test(val.replace(/\\["\\\/bfnrtu]/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, '')))
	{
	    var jVal = JSON.parse(val)
        switch(jVal.Type)
        {
            case 1: socket.emit('RedisChatMessage_'+jVal.Notify, jVal);break;
            case 2: socket.emit('RedisMessage_'+jVal.Notify, jVal);break;
        }
	}



	});

  socket.on('storeClientInfo', function (data) {
		console.log(data);
        var clientInfo = new Object();
        clientInfo.customName         = data.customName;
        clientInfo.customId         = data.customId;
        clientInfo.clientId     = socket.id;

        if(clients.indexOf(clientInfo.customName) == -1);
        {
            clients.push(clientInfo);
        }
        socket.emit('Clients', clients);
    });
  
  socket.on('disconnect', function(data){
    for( var i=0, len=clients.length; i<len; ++i ){
                var c = clients[i];

                if(c.clientId == socket.id){
                    clients.splice(i,1);
                    break;
                }
            }
    socket.emit('Clients', clients);
    console.log('user disconnected');
  });
});

io.on('connection', function(socket){


  socket.on('chatMessageToAll', function(msg){
    console.log(msg)
    socket.emit('ReceiveFromAll', msg);
  });

  socket.on('user_chat_message', function(msg){
    console.log("received message at server : "+msg)
    socket.emit(msg.clientId, msg.message);
    console.log(msg.clientId, msg.message)
  });
});

http.listen(3000, function(){
  console.log('listening on *:3000');
});


